layers:
    railway:
        filter: { type: rail, not: { tunnel: '1' } }
        data: { source: terrestris , layer: osm_roads}
        draw:
            lines-railway-style:
                order: global.sort_rank
                color: global.railway_color
                join: round
                width: [[10, 0.5px], [12, 1.0px], [13, 2px], [18, 3m]]
        service:
            filter: function() { return feature.service != ''; }
            draw:
                lines-railway-style:
                    width: [[10, 0.2px], [12, 0.5px], [13, 1px], [18, 1.5m]]
        # TODO: seems like this data is not available
        tram:
            filter: { type: tram }
            draw:
                lines-railway-style:
                    order: function() { return feature.z_order+100; }

    roads:
        data: { source: terrestris, layer: [osm_roads, osm_roads_gen0, osm_roads_gen1 ]}
        filter:
            not:
                - type: [rail, ferry, aerialway, piste]
                - tunnel: '1'
        draw:
            lines:
                # 50 is added here because otherwise some elements of the
                # landuse layer would be above the roads
                order: function() { return feature.z_order+50; }
                join: round
                cap: round
                color: global.road_color
                width: [[5, 1px], [12, 2px], [16, 5px], [17, 8m]]

        # TODO: this is not displayed
        aeroway:
            filter: { type: aeroway }
            draw:
                lines:
                    width: 80m

        highway:
            filter: { type: motorway }
            draw:
                lines:
                    width: [[8, 2px], [14, 5px], [15, 30m]]

        major_road:
            filter: { type: [primary, secondary] }
            draw:
                lines:
                    width: [[9, 1px], [14, 2px], [16, 6px], [19, 12m]]

        minor_road:
            filter: { type: [tertiary, residential, living_street, unclassified, road] }
            draw:
                lines:
                    width: [[11, 0.5px], [12, 0.75px], [13, 1.0px], [14, 1.2px], [15, 2.5px], [16, 8m]]

        tunnel:
            filter: { tunnel: '1' }
            draw:
                lines:
                    color: global.tunnel_color
                    cap: round

        service_road:
            filter: { type: [service, track] }
            draw:
                lines:
                    width: [[13, 0.5px], [17, 3px], [18, 4m]]

        path:
            filter: { type: [footway, path, pedestrian, cycleway] }
            draw:
                lines:
                    color: global.path_color
                    width: [[14, 0.5px], [15, 1px], [19, 2m]]
        # TODO: steps are not displayed
        steps:
            filter: { type: steps }
            draw:
                step_dashes:
                    order: function() { return feature.z_order+1; }
                    cap: butt
                    color: global.path_color
                    width: [[14, 0.5px], [15, 1px], [19, 2m]]

        road-outline:
            filter: { $zoom: { min: 15 }, not: { type: [footway, path, pedestrian, cycleway] } }
            draw:
                lines:
                    outline:
                        color: global.road_outline_color
                        width: function () { return 1/4 * Math.log($zoom); }
                        order: 200
            bridges:
                filter: { bridge: '1' }
                draw:
                    lines:
                        outline:
                            cap: butt
                            order: 400

        path-outline:
            filter: { $zoom: { min: 17 }, type: [footway, path, pedestrian, cycleway] }
            draw:
                lines:
                    outline:
                        color: global.path_outline_color
                        width: function () { return 1/4 * Math.log($zoom); }
                        order: 200

styles:
    step_dashes:
        base: lines
        dash: [0.6,0.4]
        dash_background_color: global.path_outline_color
    lines-railway-style:
        base: lines
        blend: opaque
